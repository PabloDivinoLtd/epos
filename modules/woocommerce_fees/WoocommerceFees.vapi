/* WoocommerceFees.vapi generated by valac 0.24.0, do not modify. */

namespace EPos {
	namespace Woocommerce {
		[CCode (cheader_filename = "WoocommerceFees.h")]
		public class SB_ModuleWoocommerceFees : SinticBolivia.Gtk.SBGtkModule, SinticBolivia.ISBModule {
			protected SinticBolivia.Database.SBDatabase dbh;
			protected Gtk.Label labelOrderTotal;
			protected Gtk.Label labelTotalFee;
			protected EPos.Woocommerce.WidgetOrderFees widgetFees;
			protected Gtk.Window windowFees;
			public SB_ModuleWoocommerceFees ();
			protected void AddHooks ();
			protected void OnButtonAddFeeClicked ();
			protected void hook_before_register_sale (SinticBolivia.SBModuleArgs<Gee.HashMap> args);
			protected void hook_pos_buttons (SinticBolivia.SBModuleArgs<Gee.HashMap> args);
			protected void hook_pos_calculate_totals (SinticBolivia.SBModuleArgs<Gee.HashMap<string,double?>> args);
			protected void hook_pos_totals_grid (SinticBolivia.SBModuleArgs<Gtk.Grid> args);
			protected void hook_wc_before_send_order (SinticBolivia.SBModuleArgs<Json.Object> args);
		}
		[CCode (cheader_filename = "WoocommerceFees.h")]
		public class WidgetOrderFees : Gtk.Box {
			protected enum Columns {
				COUNT,
				TITLE,
				AMOUNT,
				TAX,
				TOTAL,
				TAX_ID,
				TAX_RATE,
				N_COLS
			}
			protected Gtk.Box box1;
			protected Gtk.Button buttonAdd;
			public Gtk.Button buttonClose;
			protected Gtk.Button buttonDelete;
			protected Gtk.CellRendererCombo cellComboRates;
			protected Gtk.Image image1;
			protected int items;
			protected Gtk.Label labelTotal;
			protected Gtk.TreeView treeviewFees;
			protected Gtk.Builder ui;
			public WidgetOrderFees ();
			protected void Build ();
			protected void CalculateRowTotal (Gtk.TreeIter iter);
			protected void CalculateTotals ();
			public string[,] GetFees (bool clear = true);
			public double GetTotal ();
			protected void OnAmountEdited (string path, string new_text);
			protected void OnButtonAddClicked ();
			protected void OnButtonCloseClicked ();
			protected void OnButtonDeleteClicked ();
			protected void OnTaxChanged (string path, Gtk.TreeIter iter_new);
			protected void OnTaxEdited (string path, string new_text);
			protected void OnTitleEdited (string path, string new_text);
			protected void SetEvents ();
			public Gee.ArrayList<Gee.HashMap<string,GLib.Value?>> Taxes { set; }
		}
	}
}
[CCode (cheader_filename = "WoocommerceFees.h")]
public static GLib.Type sb_get_module_libwoocommercefees_type (GLib.Module mod);
