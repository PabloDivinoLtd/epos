/* Inventory.h generated by valac 0.24.0, the Vala compiler, do not modify */


#ifndef __INVENTORY_H__
#define __INVENTORY_H__

#include <glib.h>
#include <GtkSinticBolivia.h>
#include <SinticBolivia.h>
#include <gee.h>
#include <gtk/gtk.h>
#include <gmodule.h>
#include <glib-object.h>
#include <stdlib.h>
#include <string.h>
#include <hpdf.h>
#include <float.h>
#include <math.h>
#include <cairo.h>
#include <gdk/gdk.h>

G_BEGIN_DECLS


#define WOOCOMMERCE_TYPE_SB_MODULEINVENTORY (woocommerce_sb_moduleinventory_get_type ())
#define WOOCOMMERCE_SB_MODULEINVENTORY(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), WOOCOMMERCE_TYPE_SB_MODULEINVENTORY, WoocommerceSB_ModuleInventory))
#define WOOCOMMERCE_SB_MODULEINVENTORY_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), WOOCOMMERCE_TYPE_SB_MODULEINVENTORY, WoocommerceSB_ModuleInventoryClass))
#define WOOCOMMERCE_IS_SB_MODULEINVENTORY(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), WOOCOMMERCE_TYPE_SB_MODULEINVENTORY))
#define WOOCOMMERCE_IS_SB_MODULEINVENTORY_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), WOOCOMMERCE_TYPE_SB_MODULEINVENTORY))
#define WOOCOMMERCE_SB_MODULEINVENTORY_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), WOOCOMMERCE_TYPE_SB_MODULEINVENTORY, WoocommerceSB_ModuleInventoryClass))

typedef struct _WoocommerceSB_ModuleInventory WoocommerceSB_ModuleInventory;
typedef struct _WoocommerceSB_ModuleInventoryClass WoocommerceSB_ModuleInventoryClass;
typedef struct _WoocommerceSB_ModuleInventoryPrivate WoocommerceSB_ModuleInventoryPrivate;

#define EPOS_TYPE_EASSEMBLY_COMPONENT (epos_eassembly_component_get_type ())
#define EPOS_EASSEMBLY_COMPONENT(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), EPOS_TYPE_EASSEMBLY_COMPONENT, EPosEAssemblyComponent))
#define EPOS_EASSEMBLY_COMPONENT_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), EPOS_TYPE_EASSEMBLY_COMPONENT, EPosEAssemblyComponentClass))
#define EPOS_IS_EASSEMBLY_COMPONENT(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), EPOS_TYPE_EASSEMBLY_COMPONENT))
#define EPOS_IS_EASSEMBLY_COMPONENT_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), EPOS_TYPE_EASSEMBLY_COMPONENT))
#define EPOS_EASSEMBLY_COMPONENT_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), EPOS_TYPE_EASSEMBLY_COMPONENT, EPosEAssemblyComponentClass))

typedef struct _EPosEAssemblyComponent EPosEAssemblyComponent;
typedef struct _EPosEAssemblyComponentClass EPosEAssemblyComponentClass;
typedef struct _EPosEAssemblyComponentPrivate EPosEAssemblyComponentPrivate;

#define EPOS_TYPE_EPRODUCT (epos_eproduct_get_type ())
#define EPOS_EPRODUCT(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), EPOS_TYPE_EPRODUCT, EPosEProduct))
#define EPOS_EPRODUCT_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), EPOS_TYPE_EPRODUCT, EPosEProductClass))
#define EPOS_IS_EPRODUCT(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), EPOS_TYPE_EPRODUCT))
#define EPOS_IS_EPRODUCT_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), EPOS_TYPE_EPRODUCT))
#define EPOS_EPRODUCT_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), EPOS_TYPE_EPRODUCT, EPosEProductClass))

typedef struct _EPosEProduct EPosEProduct;
typedef struct _EPosEProductClass EPosEProductClass;

#define EPOS_TYPE_EASSEMBLY (epos_eassembly_get_type ())
#define EPOS_EASSEMBLY(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), EPOS_TYPE_EASSEMBLY, EPosEAssembly))
#define EPOS_EASSEMBLY_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), EPOS_TYPE_EASSEMBLY, EPosEAssemblyClass))
#define EPOS_IS_EASSEMBLY(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), EPOS_TYPE_EASSEMBLY))
#define EPOS_IS_EASSEMBLY_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), EPOS_TYPE_EASSEMBLY))
#define EPOS_EASSEMBLY_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), EPOS_TYPE_EASSEMBLY, EPosEAssemblyClass))

typedef struct _EPosEAssembly EPosEAssembly;
typedef struct _EPosEAssemblyClass EPosEAssemblyClass;
typedef struct _EPosEAssemblyPrivate EPosEAssemblyPrivate;

#define WOOCOMMERCE_TYPE_PDF_CELL (woocommerce_pdf_cell_get_type ())
#define WOOCOMMERCE_PDF_CELL(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), WOOCOMMERCE_TYPE_PDF_CELL, WoocommercePdfCell))
#define WOOCOMMERCE_PDF_CELL_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), WOOCOMMERCE_TYPE_PDF_CELL, WoocommercePdfCellClass))
#define WOOCOMMERCE_IS_PDF_CELL(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), WOOCOMMERCE_TYPE_PDF_CELL))
#define WOOCOMMERCE_IS_PDF_CELL_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), WOOCOMMERCE_TYPE_PDF_CELL))
#define WOOCOMMERCE_PDF_CELL_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), WOOCOMMERCE_TYPE_PDF_CELL, WoocommercePdfCellClass))

typedef struct _WoocommercePdfCell WoocommercePdfCell;
typedef struct _WoocommercePdfCellClass WoocommercePdfCellClass;
typedef struct _WoocommercePdfCellPrivate WoocommercePdfCellPrivate;

#define WOOCOMMERCE_TYPE_PDF_ROW (woocommerce_pdf_row_get_type ())
#define WOOCOMMERCE_PDF_ROW(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), WOOCOMMERCE_TYPE_PDF_ROW, WoocommercePdfRow))
#define WOOCOMMERCE_PDF_ROW_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), WOOCOMMERCE_TYPE_PDF_ROW, WoocommercePdfRowClass))
#define WOOCOMMERCE_IS_PDF_ROW(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), WOOCOMMERCE_TYPE_PDF_ROW))
#define WOOCOMMERCE_IS_PDF_ROW_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), WOOCOMMERCE_TYPE_PDF_ROW))
#define WOOCOMMERCE_PDF_ROW_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), WOOCOMMERCE_TYPE_PDF_ROW, WoocommercePdfRowClass))

typedef struct _WoocommercePdfRow WoocommercePdfRow;
typedef struct _WoocommercePdfRowClass WoocommercePdfRowClass;
typedef struct _WoocommercePdfRowPrivate WoocommercePdfRowPrivate;

#define WOOCOMMERCE_TYPE_CATALOG (woocommerce_catalog_get_type ())
#define WOOCOMMERCE_CATALOG(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), WOOCOMMERCE_TYPE_CATALOG, WoocommerceCatalog))
#define WOOCOMMERCE_CATALOG_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), WOOCOMMERCE_TYPE_CATALOG, WoocommerceCatalogClass))
#define WOOCOMMERCE_IS_CATALOG(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), WOOCOMMERCE_TYPE_CATALOG))
#define WOOCOMMERCE_IS_CATALOG_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), WOOCOMMERCE_TYPE_CATALOG))
#define WOOCOMMERCE_CATALOG_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), WOOCOMMERCE_TYPE_CATALOG, WoocommerceCatalogClass))

typedef struct _WoocommerceCatalog WoocommerceCatalog;
typedef struct _WoocommerceCatalogClass WoocommerceCatalogClass;
typedef struct _WoocommerceCatalogPrivate WoocommerceCatalogPrivate;

#define WOOCOMMERCE_TYPE_ORDER (woocommerce_order_get_type ())
#define WOOCOMMERCE_ORDER(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), WOOCOMMERCE_TYPE_ORDER, WoocommerceOrder))
#define WOOCOMMERCE_ORDER_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), WOOCOMMERCE_TYPE_ORDER, WoocommerceOrderClass))
#define WOOCOMMERCE_IS_ORDER(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), WOOCOMMERCE_TYPE_ORDER))
#define WOOCOMMERCE_IS_ORDER_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), WOOCOMMERCE_TYPE_ORDER))
#define WOOCOMMERCE_ORDER_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), WOOCOMMERCE_TYPE_ORDER, WoocommerceOrderClass))

typedef struct _WoocommerceOrder WoocommerceOrder;
typedef struct _WoocommerceOrderClass WoocommerceOrderClass;
typedef struct _WoocommerceOrderPrivate WoocommerceOrderPrivate;
typedef struct _EPosEProductPrivate EPosEProductPrivate;

#define WOOCOMMERCE_TYPE_PURCHASE_ORDER (woocommerce_purchase_order_get_type ())
#define WOOCOMMERCE_PURCHASE_ORDER(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), WOOCOMMERCE_TYPE_PURCHASE_ORDER, WoocommercePurchaseOrder))
#define WOOCOMMERCE_PURCHASE_ORDER_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), WOOCOMMERCE_TYPE_PURCHASE_ORDER, WoocommercePurchaseOrderClass))
#define WOOCOMMERCE_IS_PURCHASE_ORDER(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), WOOCOMMERCE_TYPE_PURCHASE_ORDER))
#define WOOCOMMERCE_IS_PURCHASE_ORDER_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), WOOCOMMERCE_TYPE_PURCHASE_ORDER))
#define WOOCOMMERCE_PURCHASE_ORDER_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), WOOCOMMERCE_TYPE_PURCHASE_ORDER, WoocommercePurchaseOrderClass))

typedef struct _WoocommercePurchaseOrder WoocommercePurchaseOrder;
typedef struct _WoocommercePurchaseOrderClass WoocommercePurchaseOrderClass;
typedef struct _WoocommercePurchaseOrderPrivate WoocommercePurchaseOrderPrivate;

#define WOOCOMMERCE_TYPE_SALE (woocommerce_sale_get_type ())
#define WOOCOMMERCE_SALE(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), WOOCOMMERCE_TYPE_SALE, WoocommerceSale))
#define WOOCOMMERCE_SALE_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), WOOCOMMERCE_TYPE_SALE, WoocommerceSaleClass))
#define WOOCOMMERCE_IS_SALE(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), WOOCOMMERCE_TYPE_SALE))
#define WOOCOMMERCE_IS_SALE_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), WOOCOMMERCE_TYPE_SALE))
#define WOOCOMMERCE_SALE_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), WOOCOMMERCE_TYPE_SALE, WoocommerceSaleClass))

typedef struct _WoocommerceSale WoocommerceSale;
typedef struct _WoocommerceSaleClass WoocommerceSaleClass;
typedef struct _WoocommerceSalePrivate WoocommerceSalePrivate;

#define EPOS_TYPE_ESUPPLIER (epos_esupplier_get_type ())
#define EPOS_ESUPPLIER(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), EPOS_TYPE_ESUPPLIER, EPosESupplier))
#define EPOS_ESUPPLIER_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), EPOS_TYPE_ESUPPLIER, EPosESupplierClass))
#define EPOS_IS_ESUPPLIER(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), EPOS_TYPE_ESUPPLIER))
#define EPOS_IS_ESUPPLIER_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), EPOS_TYPE_ESUPPLIER))
#define EPOS_ESUPPLIER_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), EPOS_TYPE_ESUPPLIER, EPosESupplierClass))

typedef struct _EPosESupplier EPosESupplier;
typedef struct _EPosESupplierClass EPosESupplierClass;
typedef struct _EPosESupplierPrivate EPosESupplierPrivate;

#define WOOCOMMERCE_INVOICE_TYPE_TICKET_INVOICE (woocommerce_invoice_ticket_invoice_get_type ())
#define WOOCOMMERCE_INVOICE_TICKET_INVOICE(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), WOOCOMMERCE_INVOICE_TYPE_TICKET_INVOICE, WoocommerceInvoiceTicketInvoice))
#define WOOCOMMERCE_INVOICE_TICKET_INVOICE_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), WOOCOMMERCE_INVOICE_TYPE_TICKET_INVOICE, WoocommerceInvoiceTicketInvoiceClass))
#define WOOCOMMERCE_INVOICE_IS_TICKET_INVOICE(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), WOOCOMMERCE_INVOICE_TYPE_TICKET_INVOICE))
#define WOOCOMMERCE_INVOICE_IS_TICKET_INVOICE_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), WOOCOMMERCE_INVOICE_TYPE_TICKET_INVOICE))
#define WOOCOMMERCE_INVOICE_TICKET_INVOICE_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), WOOCOMMERCE_INVOICE_TYPE_TICKET_INVOICE, WoocommerceInvoiceTicketInvoiceClass))

typedef struct _WoocommerceInvoiceTicketInvoice WoocommerceInvoiceTicketInvoice;
typedef struct _WoocommerceInvoiceTicketInvoiceClass WoocommerceInvoiceTicketInvoiceClass;
typedef struct _WoocommerceInvoiceTicketInvoicePrivate WoocommerceInvoiceTicketInvoicePrivate;

#define EPOS_TYPE_WIDGET_ASSEMBLIES (epos_widget_assemblies_get_type ())
#define EPOS_WIDGET_ASSEMBLIES(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), EPOS_TYPE_WIDGET_ASSEMBLIES, EPosWidgetAssemblies))
#define EPOS_WIDGET_ASSEMBLIES_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), EPOS_TYPE_WIDGET_ASSEMBLIES, EPosWidgetAssembliesClass))
#define EPOS_IS_WIDGET_ASSEMBLIES(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), EPOS_TYPE_WIDGET_ASSEMBLIES))
#define EPOS_IS_WIDGET_ASSEMBLIES_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), EPOS_TYPE_WIDGET_ASSEMBLIES))
#define EPOS_WIDGET_ASSEMBLIES_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), EPOS_TYPE_WIDGET_ASSEMBLIES, EPosWidgetAssembliesClass))

typedef struct _EPosWidgetAssemblies EPosWidgetAssemblies;
typedef struct _EPosWidgetAssembliesClass EPosWidgetAssembliesClass;
typedef struct _EPosWidgetAssembliesPrivate EPosWidgetAssembliesPrivate;

#define WOOCOMMERCE_TYPE_WIDGET_CURRENCIES (woocommerce_widget_currencies_get_type ())
#define WOOCOMMERCE_WIDGET_CURRENCIES(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), WOOCOMMERCE_TYPE_WIDGET_CURRENCIES, WoocommerceWidgetCurrencies))
#define WOOCOMMERCE_WIDGET_CURRENCIES_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), WOOCOMMERCE_TYPE_WIDGET_CURRENCIES, WoocommerceWidgetCurrenciesClass))
#define WOOCOMMERCE_IS_WIDGET_CURRENCIES(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), WOOCOMMERCE_TYPE_WIDGET_CURRENCIES))
#define WOOCOMMERCE_IS_WIDGET_CURRENCIES_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), WOOCOMMERCE_TYPE_WIDGET_CURRENCIES))
#define WOOCOMMERCE_WIDGET_CURRENCIES_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), WOOCOMMERCE_TYPE_WIDGET_CURRENCIES, WoocommerceWidgetCurrenciesClass))

typedef struct _WoocommerceWidgetCurrencies WoocommerceWidgetCurrencies;
typedef struct _WoocommerceWidgetCurrenciesClass WoocommerceWidgetCurrenciesClass;
typedef struct _WoocommerceWidgetCurrenciesPrivate WoocommerceWidgetCurrenciesPrivate;

#define WOOCOMMERCE_TYPE_WIDGET_PRODUCT_DEPARTMENTS (woocommerce_widget_product_departments_get_type ())
#define WOOCOMMERCE_WIDGET_PRODUCT_DEPARTMENTS(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), WOOCOMMERCE_TYPE_WIDGET_PRODUCT_DEPARTMENTS, WoocommerceWidgetProductDepartments))
#define WOOCOMMERCE_WIDGET_PRODUCT_DEPARTMENTS_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), WOOCOMMERCE_TYPE_WIDGET_PRODUCT_DEPARTMENTS, WoocommerceWidgetProductDepartmentsClass))
#define WOOCOMMERCE_IS_WIDGET_PRODUCT_DEPARTMENTS(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), WOOCOMMERCE_TYPE_WIDGET_PRODUCT_DEPARTMENTS))
#define WOOCOMMERCE_IS_WIDGET_PRODUCT_DEPARTMENTS_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), WOOCOMMERCE_TYPE_WIDGET_PRODUCT_DEPARTMENTS))
#define WOOCOMMERCE_WIDGET_PRODUCT_DEPARTMENTS_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), WOOCOMMERCE_TYPE_WIDGET_PRODUCT_DEPARTMENTS, WoocommerceWidgetProductDepartmentsClass))

typedef struct _WoocommerceWidgetProductDepartments WoocommerceWidgetProductDepartments;
typedef struct _WoocommerceWidgetProductDepartmentsClass WoocommerceWidgetProductDepartmentsClass;
typedef struct _WoocommerceWidgetProductDepartmentsPrivate WoocommerceWidgetProductDepartmentsPrivate;

#define WOOCOMMERCE_TYPE_WIDGET_IVENTORY (woocommerce_widget_iventory_get_type ())
#define WOOCOMMERCE_WIDGET_IVENTORY(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), WOOCOMMERCE_TYPE_WIDGET_IVENTORY, WoocommerceWidgetIventory))
#define WOOCOMMERCE_WIDGET_IVENTORY_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), WOOCOMMERCE_TYPE_WIDGET_IVENTORY, WoocommerceWidgetIventoryClass))
#define WOOCOMMERCE_IS_WIDGET_IVENTORY(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), WOOCOMMERCE_TYPE_WIDGET_IVENTORY))
#define WOOCOMMERCE_IS_WIDGET_IVENTORY_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), WOOCOMMERCE_TYPE_WIDGET_IVENTORY))
#define WOOCOMMERCE_WIDGET_IVENTORY_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), WOOCOMMERCE_TYPE_WIDGET_IVENTORY, WoocommerceWidgetIventoryClass))

typedef struct _WoocommerceWidgetIventory WoocommerceWidgetIventory;
typedef struct _WoocommerceWidgetIventoryClass WoocommerceWidgetIventoryClass;
typedef struct _WoocommerceWidgetIventoryPrivate WoocommerceWidgetIventoryPrivate;

#define EPOS_TYPE_WIDGET_ITEM_TYPES (epos_widget_item_types_get_type ())
#define EPOS_WIDGET_ITEM_TYPES(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), EPOS_TYPE_WIDGET_ITEM_TYPES, EPosWidgetItemTypes))
#define EPOS_WIDGET_ITEM_TYPES_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), EPOS_TYPE_WIDGET_ITEM_TYPES, EPosWidgetItemTypesClass))
#define EPOS_IS_WIDGET_ITEM_TYPES(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), EPOS_TYPE_WIDGET_ITEM_TYPES))
#define EPOS_IS_WIDGET_ITEM_TYPES_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), EPOS_TYPE_WIDGET_ITEM_TYPES))
#define EPOS_WIDGET_ITEM_TYPES_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), EPOS_TYPE_WIDGET_ITEM_TYPES, EPosWidgetItemTypesClass))

typedef struct _EPosWidgetItemTypes EPosWidgetItemTypes;
typedef struct _EPosWidgetItemTypesClass EPosWidgetItemTypesClass;
typedef struct _EPosWidgetItemTypesPrivate EPosWidgetItemTypesPrivate;

#define EPOS_TYPE_WINDOW_NEW_ASSEMBLY (epos_window_new_assembly_get_type ())
#define EPOS_WINDOW_NEW_ASSEMBLY(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), EPOS_TYPE_WINDOW_NEW_ASSEMBLY, EPosWindowNewAssembly))
#define EPOS_WINDOW_NEW_ASSEMBLY_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), EPOS_TYPE_WINDOW_NEW_ASSEMBLY, EPosWindowNewAssemblyClass))
#define EPOS_IS_WINDOW_NEW_ASSEMBLY(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), EPOS_TYPE_WINDOW_NEW_ASSEMBLY))
#define EPOS_IS_WINDOW_NEW_ASSEMBLY_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), EPOS_TYPE_WINDOW_NEW_ASSEMBLY))
#define EPOS_WINDOW_NEW_ASSEMBLY_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), EPOS_TYPE_WINDOW_NEW_ASSEMBLY, EPosWindowNewAssemblyClass))

typedef struct _EPosWindowNewAssembly EPosWindowNewAssembly;
typedef struct _EPosWindowNewAssemblyClass EPosWindowNewAssemblyClass;
typedef struct _EPosWindowNewAssemblyPrivate EPosWindowNewAssemblyPrivate;

#define EPOS_TYPE_WIDGET_NEW_PRODUCT (epos_widget_new_product_get_type ())
#define EPOS_WIDGET_NEW_PRODUCT(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), EPOS_TYPE_WIDGET_NEW_PRODUCT, EPosWidgetNewProduct))
#define EPOS_WIDGET_NEW_PRODUCT_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), EPOS_TYPE_WIDGET_NEW_PRODUCT, EPosWidgetNewProductClass))
#define EPOS_IS_WIDGET_NEW_PRODUCT(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), EPOS_TYPE_WIDGET_NEW_PRODUCT))
#define EPOS_IS_WIDGET_NEW_PRODUCT_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), EPOS_TYPE_WIDGET_NEW_PRODUCT))
#define EPOS_WIDGET_NEW_PRODUCT_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), EPOS_TYPE_WIDGET_NEW_PRODUCT, EPosWidgetNewProductClass))

typedef struct _EPosWidgetNewProduct EPosWidgetNewProduct;
typedef struct _EPosWidgetNewProductClass EPosWidgetNewProductClass;
typedef struct _EPosWidgetNewProductPrivate EPosWidgetNewProductPrivate;

#define WOOCOMMERCE_TYPE_WIDGET_NEW_SUPPLIER (woocommerce_widget_new_supplier_get_type ())
#define WOOCOMMERCE_WIDGET_NEW_SUPPLIER(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), WOOCOMMERCE_TYPE_WIDGET_NEW_SUPPLIER, WoocommerceWidgetNewSupplier))
#define WOOCOMMERCE_WIDGET_NEW_SUPPLIER_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), WOOCOMMERCE_TYPE_WIDGET_NEW_SUPPLIER, WoocommerceWidgetNewSupplierClass))
#define WOOCOMMERCE_IS_WIDGET_NEW_SUPPLIER(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), WOOCOMMERCE_TYPE_WIDGET_NEW_SUPPLIER))
#define WOOCOMMERCE_IS_WIDGET_NEW_SUPPLIER_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), WOOCOMMERCE_TYPE_WIDGET_NEW_SUPPLIER))
#define WOOCOMMERCE_WIDGET_NEW_SUPPLIER_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), WOOCOMMERCE_TYPE_WIDGET_NEW_SUPPLIER, WoocommerceWidgetNewSupplierClass))

typedef struct _WoocommerceWidgetNewSupplier WoocommerceWidgetNewSupplier;
typedef struct _WoocommerceWidgetNewSupplierClass WoocommerceWidgetNewSupplierClass;
typedef struct _WoocommerceWidgetNewSupplierPrivate WoocommerceWidgetNewSupplierPrivate;

#define WOOCOMMERCE_TYPE_WIDGET_PRODUCT_LINES (woocommerce_widget_product_lines_get_type ())
#define WOOCOMMERCE_WIDGET_PRODUCT_LINES(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), WOOCOMMERCE_TYPE_WIDGET_PRODUCT_LINES, WoocommerceWidgetProductLines))
#define WOOCOMMERCE_WIDGET_PRODUCT_LINES_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), WOOCOMMERCE_TYPE_WIDGET_PRODUCT_LINES, WoocommerceWidgetProductLinesClass))
#define WOOCOMMERCE_IS_WIDGET_PRODUCT_LINES(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), WOOCOMMERCE_TYPE_WIDGET_PRODUCT_LINES))
#define WOOCOMMERCE_IS_WIDGET_PRODUCT_LINES_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), WOOCOMMERCE_TYPE_WIDGET_PRODUCT_LINES))
#define WOOCOMMERCE_WIDGET_PRODUCT_LINES_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), WOOCOMMERCE_TYPE_WIDGET_PRODUCT_LINES, WoocommerceWidgetProductLinesClass))

typedef struct _WoocommerceWidgetProductLines WoocommerceWidgetProductLines;
typedef struct _WoocommerceWidgetProductLinesClass WoocommerceWidgetProductLinesClass;
typedef struct _WoocommerceWidgetProductLinesPrivate WoocommerceWidgetProductLinesPrivate;

#define WOOCOMMERCE_TYPE_WIDGET_PURCHASE_ORDERS (woocommerce_widget_purchase_orders_get_type ())
#define WOOCOMMERCE_WIDGET_PURCHASE_ORDERS(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), WOOCOMMERCE_TYPE_WIDGET_PURCHASE_ORDERS, WoocommerceWidgetPurchaseOrders))
#define WOOCOMMERCE_WIDGET_PURCHASE_ORDERS_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), WOOCOMMERCE_TYPE_WIDGET_PURCHASE_ORDERS, WoocommerceWidgetPurchaseOrdersClass))
#define WOOCOMMERCE_IS_WIDGET_PURCHASE_ORDERS(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), WOOCOMMERCE_TYPE_WIDGET_PURCHASE_ORDERS))
#define WOOCOMMERCE_IS_WIDGET_PURCHASE_ORDERS_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), WOOCOMMERCE_TYPE_WIDGET_PURCHASE_ORDERS))
#define WOOCOMMERCE_WIDGET_PURCHASE_ORDERS_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), WOOCOMMERCE_TYPE_WIDGET_PURCHASE_ORDERS, WoocommerceWidgetPurchaseOrdersClass))

typedef struct _WoocommerceWidgetPurchaseOrders WoocommerceWidgetPurchaseOrders;
typedef struct _WoocommerceWidgetPurchaseOrdersClass WoocommerceWidgetPurchaseOrdersClass;
typedef struct _WoocommerceWidgetPurchaseOrdersPrivate WoocommerceWidgetPurchaseOrdersPrivate;

#define WOOCOMMERCE_WIDGET_PURCHASE_ORDERS_TYPE_COLUMNS (woocommerce_widget_purchase_orders_columns_get_type ())

#define WOOCOMMERCE_TYPE_WIDGET_PURCHASE_ORDER (woocommerce_widget_purchase_order_get_type ())
#define WOOCOMMERCE_WIDGET_PURCHASE_ORDER(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), WOOCOMMERCE_TYPE_WIDGET_PURCHASE_ORDER, WoocommerceWidgetPurchaseOrder))
#define WOOCOMMERCE_WIDGET_PURCHASE_ORDER_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), WOOCOMMERCE_TYPE_WIDGET_PURCHASE_ORDER, WoocommerceWidgetPurchaseOrderClass))
#define WOOCOMMERCE_IS_WIDGET_PURCHASE_ORDER(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), WOOCOMMERCE_TYPE_WIDGET_PURCHASE_ORDER))
#define WOOCOMMERCE_IS_WIDGET_PURCHASE_ORDER_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), WOOCOMMERCE_TYPE_WIDGET_PURCHASE_ORDER))
#define WOOCOMMERCE_WIDGET_PURCHASE_ORDER_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), WOOCOMMERCE_TYPE_WIDGET_PURCHASE_ORDER, WoocommerceWidgetPurchaseOrderClass))

typedef struct _WoocommerceWidgetPurchaseOrder WoocommerceWidgetPurchaseOrder;
typedef struct _WoocommerceWidgetPurchaseOrderClass WoocommerceWidgetPurchaseOrderClass;
typedef struct _WoocommerceWidgetPurchaseOrderPrivate WoocommerceWidgetPurchaseOrderPrivate;

#define WOOCOMMERCE_WIDGET_PURCHASE_ORDER_TYPE_COLUMNS (woocommerce_widget_purchase_order_columns_get_type ())

#define WOOCOMMERCE_TYPE_WIDGET_SUPPLIERS (woocommerce_widget_suppliers_get_type ())
#define WOOCOMMERCE_WIDGET_SUPPLIERS(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), WOOCOMMERCE_TYPE_WIDGET_SUPPLIERS, WoocommerceWidgetSuppliers))
#define WOOCOMMERCE_WIDGET_SUPPLIERS_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), WOOCOMMERCE_TYPE_WIDGET_SUPPLIERS, WoocommerceWidgetSuppliersClass))
#define WOOCOMMERCE_IS_WIDGET_SUPPLIERS(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), WOOCOMMERCE_TYPE_WIDGET_SUPPLIERS))
#define WOOCOMMERCE_IS_WIDGET_SUPPLIERS_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), WOOCOMMERCE_TYPE_WIDGET_SUPPLIERS))
#define WOOCOMMERCE_WIDGET_SUPPLIERS_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), WOOCOMMERCE_TYPE_WIDGET_SUPPLIERS, WoocommerceWidgetSuppliersClass))

typedef struct _WoocommerceWidgetSuppliers WoocommerceWidgetSuppliers;
typedef struct _WoocommerceWidgetSuppliersClass WoocommerceWidgetSuppliersClass;
typedef struct _WoocommerceWidgetSuppliersPrivate WoocommerceWidgetSuppliersPrivate;

#define WOOCOMMERCE_WIDGET_SUPPLIERS_TYPE_COLUMNS (woocommerce_widget_suppliers_columns_get_type ())

#define WOOCOMMERCE_TYPE_WIDGET_TRANSACTIONS (woocommerce_widget_transactions_get_type ())
#define WOOCOMMERCE_WIDGET_TRANSACTIONS(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), WOOCOMMERCE_TYPE_WIDGET_TRANSACTIONS, WoocommerceWidgetTransactions))
#define WOOCOMMERCE_WIDGET_TRANSACTIONS_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), WOOCOMMERCE_TYPE_WIDGET_TRANSACTIONS, WoocommerceWidgetTransactionsClass))
#define WOOCOMMERCE_IS_WIDGET_TRANSACTIONS(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), WOOCOMMERCE_TYPE_WIDGET_TRANSACTIONS))
#define WOOCOMMERCE_IS_WIDGET_TRANSACTIONS_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), WOOCOMMERCE_TYPE_WIDGET_TRANSACTIONS))
#define WOOCOMMERCE_WIDGET_TRANSACTIONS_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), WOOCOMMERCE_TYPE_WIDGET_TRANSACTIONS, WoocommerceWidgetTransactionsClass))

typedef struct _WoocommerceWidgetTransactions WoocommerceWidgetTransactions;
typedef struct _WoocommerceWidgetTransactionsClass WoocommerceWidgetTransactionsClass;
typedef struct _WoocommerceWidgetTransactionsPrivate WoocommerceWidgetTransactionsPrivate;

#define WOOCOMMERCE_WIDGET_TRANSACTIONS_TYPE_COLUMNS (woocommerce_widget_transactions_columns_get_type ())

#define WOOCOMMERCE_TYPE_WIDGET_TRANSACTION_TYPES (woocommerce_widget_transaction_types_get_type ())
#define WOOCOMMERCE_WIDGET_TRANSACTION_TYPES(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), WOOCOMMERCE_TYPE_WIDGET_TRANSACTION_TYPES, WoocommerceWidgetTransactionTypes))
#define WOOCOMMERCE_WIDGET_TRANSACTION_TYPES_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), WOOCOMMERCE_TYPE_WIDGET_TRANSACTION_TYPES, WoocommerceWidgetTransactionTypesClass))
#define WOOCOMMERCE_IS_WIDGET_TRANSACTION_TYPES(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), WOOCOMMERCE_TYPE_WIDGET_TRANSACTION_TYPES))
#define WOOCOMMERCE_IS_WIDGET_TRANSACTION_TYPES_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), WOOCOMMERCE_TYPE_WIDGET_TRANSACTION_TYPES))
#define WOOCOMMERCE_WIDGET_TRANSACTION_TYPES_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), WOOCOMMERCE_TYPE_WIDGET_TRANSACTION_TYPES, WoocommerceWidgetTransactionTypesClass))

typedef struct _WoocommerceWidgetTransactionTypes WoocommerceWidgetTransactionTypes;
typedef struct _WoocommerceWidgetTransactionTypesClass WoocommerceWidgetTransactionTypesClass;
typedef struct _WoocommerceWidgetTransactionTypesPrivate WoocommerceWidgetTransactionTypesPrivate;

#define WOOCOMMERCE_TYPE_WIDGET_UNIT_OF_MEASUREMENT (woocommerce_widget_unit_of_measurement_get_type ())
#define WOOCOMMERCE_WIDGET_UNIT_OF_MEASUREMENT(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), WOOCOMMERCE_TYPE_WIDGET_UNIT_OF_MEASUREMENT, WoocommerceWidgetUnitOfMeasurement))
#define WOOCOMMERCE_WIDGET_UNIT_OF_MEASUREMENT_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), WOOCOMMERCE_TYPE_WIDGET_UNIT_OF_MEASUREMENT, WoocommerceWidgetUnitOfMeasurementClass))
#define WOOCOMMERCE_IS_WIDGET_UNIT_OF_MEASUREMENT(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), WOOCOMMERCE_TYPE_WIDGET_UNIT_OF_MEASUREMENT))
#define WOOCOMMERCE_IS_WIDGET_UNIT_OF_MEASUREMENT_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), WOOCOMMERCE_TYPE_WIDGET_UNIT_OF_MEASUREMENT))
#define WOOCOMMERCE_WIDGET_UNIT_OF_MEASUREMENT_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), WOOCOMMERCE_TYPE_WIDGET_UNIT_OF_MEASUREMENT, WoocommerceWidgetUnitOfMeasurementClass))

typedef struct _WoocommerceWidgetUnitOfMeasurement WoocommerceWidgetUnitOfMeasurement;
typedef struct _WoocommerceWidgetUnitOfMeasurementClass WoocommerceWidgetUnitOfMeasurementClass;
typedef struct _WoocommerceWidgetUnitOfMeasurementPrivate WoocommerceWidgetUnitOfMeasurementPrivate;

#define WOOCOMMERCE_TYPE_WIDGET_VIEW_TRANSACTION (woocommerce_widget_view_transaction_get_type ())
#define WOOCOMMERCE_WIDGET_VIEW_TRANSACTION(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), WOOCOMMERCE_TYPE_WIDGET_VIEW_TRANSACTION, WoocommerceWidgetViewTransaction))
#define WOOCOMMERCE_WIDGET_VIEW_TRANSACTION_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), WOOCOMMERCE_TYPE_WIDGET_VIEW_TRANSACTION, WoocommerceWidgetViewTransactionClass))
#define WOOCOMMERCE_IS_WIDGET_VIEW_TRANSACTION(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), WOOCOMMERCE_TYPE_WIDGET_VIEW_TRANSACTION))
#define WOOCOMMERCE_IS_WIDGET_VIEW_TRANSACTION_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), WOOCOMMERCE_TYPE_WIDGET_VIEW_TRANSACTION))
#define WOOCOMMERCE_WIDGET_VIEW_TRANSACTION_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), WOOCOMMERCE_TYPE_WIDGET_VIEW_TRANSACTION, WoocommerceWidgetViewTransactionClass))

typedef struct _WoocommerceWidgetViewTransaction WoocommerceWidgetViewTransaction;
typedef struct _WoocommerceWidgetViewTransactionClass WoocommerceWidgetViewTransactionClass;
typedef struct _WoocommerceWidgetViewTransactionPrivate WoocommerceWidgetViewTransactionPrivate;

#define WOOCOMMERCE_WIDGET_VIEW_TRANSACTION_TYPE_COLUMNS (woocommerce_widget_view_transaction_columns_get_type ())

#define WOOCOMMERCE_TYPE_INVENTORY_HELPER (woocommerce_inventory_helper_get_type ())
#define WOOCOMMERCE_INVENTORY_HELPER(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), WOOCOMMERCE_TYPE_INVENTORY_HELPER, WoocommerceInventoryHelper))
#define WOOCOMMERCE_INVENTORY_HELPER_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), WOOCOMMERCE_TYPE_INVENTORY_HELPER, WoocommerceInventoryHelperClass))
#define WOOCOMMERCE_IS_INVENTORY_HELPER(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), WOOCOMMERCE_TYPE_INVENTORY_HELPER))
#define WOOCOMMERCE_IS_INVENTORY_HELPER_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), WOOCOMMERCE_TYPE_INVENTORY_HELPER))
#define WOOCOMMERCE_INVENTORY_HELPER_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), WOOCOMMERCE_TYPE_INVENTORY_HELPER, WoocommerceInventoryHelperClass))

typedef struct _WoocommerceInventoryHelper WoocommerceInventoryHelper;
typedef struct _WoocommerceInventoryHelperClass WoocommerceInventoryHelperClass;
typedef struct _WoocommerceInventoryHelperPrivate WoocommerceInventoryHelperPrivate;

struct _WoocommerceSB_ModuleInventory {
	SinticBoliviaGtkSBGtkModule parent_instance;
	WoocommerceSB_ModuleInventoryPrivate * priv;
};

struct _WoocommerceSB_ModuleInventoryClass {
	SinticBoliviaGtkSBGtkModuleClass parent_class;
};

struct _EPosEAssemblyComponent {
	GObject parent_instance;
	EPosEAssemblyComponentPrivate * priv;
	SinticBoliviaDatabaseSBDBRow* dbData;
	EPosEProduct* Product;
};

struct _EPosEAssemblyComponentClass {
	GObjectClass parent_class;
};

struct _EPosEAssembly {
	GObject parent_instance;
	EPosEAssemblyPrivate * priv;
	SinticBoliviaDatabaseSBDBRow* dbData;
	GeeArrayList* components;
};

struct _EPosEAssemblyClass {
	GObjectClass parent_class;
};

struct _WoocommercePdfCell {
	GObject parent_instance;
	WoocommercePdfCellPrivate * priv;
	HPDF_Page* page;
	HPDF_Font* PdfFont;
	gchar* text;
	HPDF_Image* image;
	gfloat Width;
	gfloat Height;
	gchar* FontFamily;
	gfloat FontSize;
	gint Span;
	gboolean Border;
	gint TableCols;
	gfloat* ColumnsWidth;
	gint ColumnsWidth_length1;
	gchar* Align;
	GeeArrayList* lines;
};

struct _WoocommercePdfCellClass {
	GObjectClass parent_class;
};

struct _WoocommercePdfRow {
	GObject parent_instance;
	WoocommercePdfRowPrivate * priv;
	HPDF_Page* page;
	GeeArrayList* cells;
	gfloat Width;
	gfloat Height;
	gfloat* ColumnsWidth;
	gint ColumnsWidth_length1;
};

struct _WoocommercePdfRowClass {
	GObjectClass parent_class;
};

struct _WoocommerceCatalog {
	GObject parent_instance;
	WoocommerceCatalogPrivate * priv;
	gchar* Title;
	gfloat XPos;
	gfloat YPos;
	gchar* FontType;
	gchar** Headers;
	gint Headers_length1;
	gfloat* ColumnsWidth;
	gint ColumnsWidth_length1;
	gfloat TopMargin;
	gfloat RightMargin;
	gfloat BottomMargin;
	gfloat LeftMargin;
	HPDF_Doc* pdf;
	HPDF_Page* page;
	HPDF_Font* font;
	gfloat pageWidth;
	gfloat pageHeight;
	gfloat pageAvailableSpace;
	gint currentCell;
	gint totalCols;
	gfloat rowHeight;
	GeeArrayList* rows;
	WoocommercePdfRow* currentRow;
};

struct _WoocommerceCatalogClass {
	GObjectClass parent_class;
};

struct _WoocommerceOrder {
	GObject parent_instance;
	WoocommerceOrderPrivate * priv;
	SinticBoliviaDatabaseSBDBRow* dbData;
	GeeArrayList* items;
	SinticBoliviaSBUser* User;
};

struct _WoocommerceOrderClass {
	GObjectClass parent_class;
};

struct _EPosEProduct {
	GObject parent_instance;
	EPosEProductPrivate * priv;
	SinticBoliviaDatabaseSBDBRow* dbData;
	GeeArrayList* images;
	GeeArrayList* Attachments;
	GeeArrayList* categoriesIds;
	GeeArrayList* categories;
};

struct _EPosEProductClass {
	GObjectClass parent_class;
};

struct _WoocommercePurchaseOrder {
	WoocommerceOrder parent_instance;
	WoocommercePurchaseOrderPrivate * priv;
};

struct _WoocommercePurchaseOrderClass {
	WoocommerceOrderClass parent_class;
};

struct _WoocommerceSale {
	GObject parent_instance;
	WoocommerceSalePrivate * priv;
	SinticBoliviaDatabaseSBDBRow* dbData;
};

struct _WoocommerceSaleClass {
	GObjectClass parent_class;
};

struct _EPosESupplier {
	GObject parent_instance;
	EPosESupplierPrivate * priv;
	SinticBoliviaDatabaseSBDBRow* dbData;
};

struct _EPosESupplierClass {
	GObjectClass parent_class;
};

struct _WoocommerceInvoiceTicketInvoice {
	GObject parent_instance;
	WoocommerceInvoiceTicketInvoicePrivate * priv;
	cairo_t* ctx;
	gint width;
	gint height;
	gint innerWidth;
	gchar* body;
	gdouble fontSize;
	gint pageMargin;
	gint padding;
};

struct _WoocommerceInvoiceTicketInvoiceClass {
	GObjectClass parent_class;
};

struct _EPosWidgetAssemblies {
	GtkBox parent_instance;
	EPosWidgetAssembliesPrivate * priv;
	GtkBuilder* ui;
	GtkBox* boxAssemblies;
	GtkImage* image1;
	GtkButton* buttonAdd;
	GtkButton* buttonEdit;
	GtkButton* buttonDelete;
	GtkComboBox* comboboxStore;
	GtkTreeView* treeviewAssemblies;
};

struct _EPosWidgetAssembliesClass {
	GtkBoxClass parent_class;
};

struct _WoocommerceWidgetCurrencies {
	GtkBox parent_instance;
	WoocommerceWidgetCurrenciesPrivate * priv;
	GtkBuilder* ui;
	GtkBox* boxCurrencies;
	GtkImage* image1;
	GtkButton* buttonAdd;
	GtkButton* buttonEdit;
	GtkButton* buttonDelete;
	GtkScrolledWindow* scrolledwindow1;
	SinticBoliviaGtkDbTableTreeView* treeview;
	GtkDialog* dlg;
	GtkEntry* entryCode;
	GtkEntry* entryName;
	GtkEntry* entryRate;
	GtkButton* buttonSave;
	GtkButton* buttonCancel;
	gint currencyId;
};

struct _WoocommerceWidgetCurrenciesClass {
	GtkBoxClass parent_class;
};

struct _WoocommerceWidgetProductDepartments {
	GtkBox parent_instance;
	WoocommerceWidgetProductDepartmentsPrivate * priv;
	GtkBuilder* ui;
	GtkBox* boxDepartments;
	GtkImage* image1;
	GtkButton* buttonNew;
	GtkButton* buttonEdit;
	GtkButton* buttonDelete;
	GtkScrolledWindow* scrolledwindow1;
	SinticBoliviaGtkDbTableTreeView* treeview;
	GtkDialog* dlg;
	GtkEntry* entryName;
	GtkEntry* entryDescription;
	GtkButton* buttonCancel;
	GtkButton* buttonSave;
	gint depId;
};

struct _WoocommerceWidgetProductDepartmentsClass {
	GtkBoxClass parent_class;
};

struct _WoocommerceWidgetIventory {
	GtkBox parent_instance;
	WoocommerceWidgetIventoryPrivate * priv;
	GtkBuilder* ui;
	GtkWindow* windowProducts;
	GtkBox* boxProducts;
	GtkImage* imageStores;
	GtkLabel* labelStoresTitle;
	GtkPaned* panedBranches;
	GtkButton* buttonAddStore;
	GtkButton* buttonEditStore;
	GtkButton* buttonDeleteStore;
	GtkEntry* entrySearchStore;
	GtkTreeView* treeviewStores;
	GtkBox* boxStore;
	GtkEntry* entryStoreName;
	GtkEntry* entryStoreAddress;
	GtkComboBox* comboboxTax;
	GtkComboBox* comboboxSalesDocument;
	GtkComboBox* comboboxPurchaseDocument;
	GtkComboBox* comboboxRefundDocument;
	GtkButton* buttonSaveStore;
	GtkButton* buttonCancelStore;
	GtkPaned* panedCategories;
	GtkImage* imageCategories;
	GtkButton* buttonNewCategory;
	GtkButton* buttonEditCategory;
	GtkButton* buttonDeleteCategory;
	GtkTreeView* treeviewCategories;
	GtkComboBox* comboboxCategoriesStore;
	GtkEntry* entryCategoryName;
	GtkTextView* textviewCategoryDescription;
	GtkComboBox* comboboxParentCategory;
	GtkComboBox* comboboxCategoryStore;
	GtkButton* buttonSaveCategory;
	GtkButton* buttonCancelCategory;
	GtkImage* imageProducts;
	GtkButtonBox* buttonboxProducts;
	GtkButton* buttonNewProduct;
	GtkButton* buttonEditProduct;
	GtkButton* buttonDeleteProduct;
	GtkComboBox* comboboxStore;
	GtkComboBox* comboboxCategory;
	GtkButton* buttonRefreshProducts;
	GtkEntry* entrySearchProduct;
	GtkComboBox* comboboxProductSearchBy;
	GtkTreeView* treeviewProducts;
	GtkButton* buttonFirst;
	GtkButton* buttonPrev;
	GtkButton* buttonNext;
	GtkButton* buttonLast;
	GtkLabel* labelTotalProducts;
	GtkLabel* labelViewProducts;
	GtkLabel* labelViewTotal;
	gint _category_id;
	gint _store_id;
	gint _product_id;
};

struct _WoocommerceWidgetIventoryClass {
	GtkBoxClass parent_class;
};

struct _EPosWidgetItemTypes {
	GtkBox parent_instance;
	EPosWidgetItemTypesPrivate * priv;
	GtkBuilder* ui;
	GtkBox* boxItemTypes;
	GtkImage* image1;
	GtkButton* buttonAdd;
	GtkButton* buttonEdit;
	GtkButton* buttonDelete;
	GtkScrolledWindow* scrolledwindow1;
	SinticBoliviaGtkDbTableTreeView* treeview;
	GtkDialog* dlg;
	GtkEntry* entryCode;
	GtkEntry* entryName;
	GtkButton* buttonCancel;
	GtkButton* buttonSave;
	gint itemTypeId;
};

struct _EPosWidgetItemTypesClass {
	GtkBoxClass parent_class;
};

struct _EPosWindowNewAssembly {
	GtkWindow parent_instance;
	EPosWindowNewAssemblyPrivate * priv;
	GtkBuilder* ui;
	GtkBox* boxNewAssembly;
	GtkImage* image1;
	GtkLabel* labelTitle;
	GtkEntry* entryName;
	GtkTextView* textviewDescription;
	GtkTreeView* treeview1;
	GtkEntry* entrySearchProduct;
	GtkEntry* entryRequiredQty;
	GtkComboBox* comboboxUOM;
	GtkButton* buttonAdd;
	GtkButton* buttonCancel;
	GtkButton* buttonSave;
	gint AssemblyId;
};

struct _EPosWindowNewAssemblyClass {
	GtkWindowClass parent_class;
};

struct _EPosWidgetNewProduct {
	GtkBox parent_instance;
	EPosWidgetNewProductPrivate * priv;
	GtkBuilder* ui;
	GtkWindow* windowNewProduct;
	GtkBox* boxNewProduct;
	GtkNotebook* notebook1;
	GtkComboBox* comboboxCategories;
	GtkComboBox* comboboxDepartment;
	GtkTextView* textviewDescription;
	GtkEntry* entryCode;
	GtkButton* buttonGenerateCode;
	GtkEntry* entryName;
	GtkEntry* entryBarcode;
	GtkComboBox* comboboxItemType;
	GtkComboBox* comboboxUnitofMeasure;
	GtkComboBox* comboboxStatus;
	GtkEntry* entryCost;
	GtkEntry* entryPrice;
	GtkEntry* entryPrice2;
	GtkComboBox* comboboxStoreBranch;
	GtkEntry* entryQuantity;
	GtkEntry* entryMinQuantity;
	GtkCheckButton* checkbuttonUsesStock;
	GtkViewport* viewport1;
	GtkFixed* fixedImages;
	GtkScrolledWindow* scrolledwindowSn;
	GtkEntry* entrySn;
	GtkTreeView* treeviewSn;
	GtkTreeView* treeviewSuppliers;
	GtkEntry* entrySearchSupplier;
	GtkButton* buttonAddSupplier;
	GtkButton* buttonAddSn;
	GtkButton* buttonRemoveSn;
	GtkButton* buttonAddImage;
	GtkButton* buttonCancel;
	GtkButton* buttonSave;
	EPosEProduct* product;
	gint fixedWidth;
	gint fixedX;
	gint fixedY;
	gint fixedRow;
	gint fixedCol;
};

struct _EPosWidgetNewProductClass {
	GtkBoxClass parent_class;
};

struct _WoocommerceWidgetNewSupplier {
	GtkBox parent_instance;
	WoocommerceWidgetNewSupplierPrivate * priv;
	GtkBuilder* ui;
	GtkBox* boxSupplier;
	GtkImage* image1;
	GtkLabel* labelDetailsTitle;
	GtkViewport* viewportDetailsBody;
	GtkEntry* entrySupplierName;
	GtkEntry* entryDefaultMarkup;
	GtkTextView* textviewDescription;
	GtkEntry* entryCompany;
	GtkEntry* entryContactFirstName;
	GtkEntry* entryPhone;
	GtkEntry* entryMobile;
	GtkEntry* entryEmail;
	GtkEntry* entryWebsite;
	GtkEntry* entryStreet;
	GtkEntry* entryCity;
	GtkComboBox* comboboxCountry;
	GtkButton* buttonCancel;
	GtkButton* buttonSave;
	gint supplierId;
};

struct _WoocommerceWidgetNewSupplierClass {
	GtkBoxClass parent_class;
};

struct _WoocommerceWidgetProductLines {
	GtkBox parent_instance;
	WoocommerceWidgetProductLinesPrivate * priv;
	GtkBuilder* ui;
	GtkBox* box1;
	GtkImage* image1;
	GtkButton* buttonNew;
	GtkButton* buttonEdit;
	GtkButton* buttonDelete;
	GtkScrolledWindow* scrolledwindow1;
	SinticBoliviaGtkDbTableTreeView* tv;
	GtkDialog* dlg;
	GtkEntry* entryName;
	GtkEntry* entryDescription;
	GtkButton* buttonCancel;
	GtkButton* buttonSave;
	gint lineId;
};

struct _WoocommerceWidgetProductLinesClass {
	GtkBoxClass parent_class;
};

struct _WoocommerceWidgetPurchaseOrders {
	GtkBox parent_instance;
	WoocommerceWidgetPurchaseOrdersPrivate * priv;
	GtkBuilder* ui;
	GtkBox* boxPurchaseOrders;
	GtkImage* image1;
	GtkLabel* labelTitle;
	GtkButton* buttonNew;
	GtkButton* buttonEdit;
	GtkButton* buttonReceive;
	GtkButton* buttonCancel;
	GtkComboBox* comboboxStores;
	GtkComboBox* comboboxStatus;
	GtkTreeView* treeviewOrders;
};

struct _WoocommerceWidgetPurchaseOrdersClass {
	GtkBoxClass parent_class;
};

typedef enum  {
	WOOCOMMERCE_WIDGET_PURCHASE_ORDERS_COLUMNS_COUNT,
	WOOCOMMERCE_WIDGET_PURCHASE_ORDERS_COLUMNS_STORE,
	WOOCOMMERCE_WIDGET_PURCHASE_ORDERS_COLUMNS_ITEMS,
	WOOCOMMERCE_WIDGET_PURCHASE_ORDERS_COLUMNS_TOTAL,
	WOOCOMMERCE_WIDGET_PURCHASE_ORDERS_COLUMNS_DELIVERY_DATE,
	WOOCOMMERCE_WIDGET_PURCHASE_ORDERS_COLUMNS_STATUS,
	WOOCOMMERCE_WIDGET_PURCHASE_ORDERS_COLUMNS_CREATION_DATE,
	WOOCOMMERCE_WIDGET_PURCHASE_ORDERS_COLUMNS_ORDER_ID,
	WOOCOMMERCE_WIDGET_PURCHASE_ORDERS_COLUMNS_N_COLS
} WoocommerceWidgetPurchaseOrdersColumns;

struct _WoocommerceWidgetPurchaseOrder {
	GtkBox parent_instance;
	WoocommerceWidgetPurchaseOrderPrivate * priv;
	GtkBuilder* ui;
	GtkBox* boxPurchaseOrder;
	GtkLabel* labelTitle;
	GtkComboBox* comboboxStores;
	GtkEntry* entryDetails;
	GtkEntry* entrySearchProduct;
	GtkSpinButton* spinbuttonProductQty;
	GtkComboBox* comboboxSearchType;
	GtkButton* buttonAddProduct;
	GtkTreeView* treeviewProducts;
	GtkButtonBox* buttonbox1;
	GtkButton* buttonCancel;
	GtkButton* buttonSave;
	GtkLabel* labelTotal;
	gint total_items;
	WoocommercePurchaseOrder* order;
};

struct _WoocommerceWidgetPurchaseOrderClass {
	GtkBoxClass parent_class;
};

typedef enum  {
	WOOCOMMERCE_WIDGET_PURCHASE_ORDER_COLUMNS_COUNT,
	WOOCOMMERCE_WIDGET_PURCHASE_ORDER_COLUMNS_PRODUCT_NAME,
	WOOCOMMERCE_WIDGET_PURCHASE_ORDER_COLUMNS_CURRENT_QTY,
	WOOCOMMERCE_WIDGET_PURCHASE_ORDER_COLUMNS_QTY,
	WOOCOMMERCE_WIDGET_PURCHASE_ORDER_COLUMNS_COST,
	WOOCOMMERCE_WIDGET_PURCHASE_ORDER_COLUMNS_TOTAL,
	WOOCOMMERCE_WIDGET_PURCHASE_ORDER_COLUMNS_IMAGE,
	WOOCOMMERCE_WIDGET_PURCHASE_ORDER_COLUMNS_PRODUCT_ID,
	WOOCOMMERCE_WIDGET_PURCHASE_ORDER_COLUMNS_N
} WoocommerceWidgetPurchaseOrderColumns;

struct _WoocommerceWidgetSuppliers {
	GtkBox parent_instance;
	WoocommerceWidgetSuppliersPrivate * priv;
	GtkBuilder* ui;
	GtkBox* boxSuppliers;
	GtkImage* image1;
	GtkLabel* labelTitle;
	GtkButton* buttonNew;
	GtkButton* buttonEdit;
	GtkButton* buttonDelete;
	GtkComboBox* comboboxStore;
	GtkTreeView* treeviewSuppliers;
};

struct _WoocommerceWidgetSuppliersClass {
	GtkBoxClass parent_class;
};

typedef enum  {
	WOOCOMMERCE_WIDGET_SUPPLIERS_COLUMNS_COUNT,
	WOOCOMMERCE_WIDGET_SUPPLIERS_COLUMNS_SUPPLIER_NAME,
	WOOCOMMERCE_WIDGET_SUPPLIERS_COLUMNS_COMPANY,
	WOOCOMMERCE_WIDGET_SUPPLIERS_COLUMNS_CITY,
	WOOCOMMERCE_WIDGET_SUPPLIERS_COLUMNS_MARKUP,
	WOOCOMMERCE_WIDGET_SUPPLIERS_COLUMNS_SUPPLIER_ID,
	WOOCOMMERCE_WIDGET_SUPPLIERS_COLUMNS_N_COLS
} WoocommerceWidgetSuppliersColumns;

struct _WoocommerceWidgetTransactions {
	GtkBox parent_instance;
	WoocommerceWidgetTransactionsPrivate * priv;
	GtkBuilder* ui;
	GtkWindow* windowTransactions;
	GtkBox* boxTransactions;
	GtkImage* image1;
	GtkBox* boxButtons;
	GtkButton* buttonView;
	GtkButton* buttonEdit;
	GtkButton* buttonRevert;
	GtkButton* buttonDelete;
	GtkBox* boxFilters;
	GtkComboBox* comboboxStore;
	GtkComboBox* comboboxTransactionType;
	GtkTreeView* treeviewTransactions;
	SinticBoliviaSBStore* store;
};

struct _WoocommerceWidgetTransactionsClass {
	GtkBoxClass parent_class;
};

typedef enum  {
	WOOCOMMERCE_WIDGET_TRANSACTIONS_COLUMNS_CHECKBOX,
	WOOCOMMERCE_WIDGET_TRANSACTIONS_COLUMNS_ID,
	WOOCOMMERCE_WIDGET_TRANSACTIONS_COLUMNS_STORE,
	WOOCOMMERCE_WIDGET_TRANSACTIONS_COLUMNS_TYPE,
	WOOCOMMERCE_WIDGET_TRANSACTIONS_COLUMNS_TOTAL,
	WOOCOMMERCE_WIDGET_TRANSACTIONS_COLUMNS_NUM_ITEMS,
	WOOCOMMERCE_WIDGET_TRANSACTIONS_COLUMNS_STATUS,
	WOOCOMMERCE_WIDGET_TRANSACTIONS_COLUMNS_USER_ID,
	WOOCOMMERCE_WIDGET_TRANSACTIONS_COLUMNS_DATETIME,
	WOOCOMMERCE_WIDGET_TRANSACTIONS_COLUMNS_G_TYPE,
	WOOCOMMERCE_WIDGET_TRANSACTIONS_COLUMNS_N_COLS
} WoocommerceWidgetTransactionsColumns;

struct _WoocommerceWidgetTransactionTypes {
	GtkBox parent_instance;
	WoocommerceWidgetTransactionTypesPrivate * priv;
	GtkBuilder* ui;
	GtkBox* boxTransactionTypes;
	GtkImage* image1;
	GtkLabel* labelTitle;
	GtkButton* buttonNew;
	GtkButton* buttonEdit;
	GtkButton* buttonDelete;
	GtkTreeView* treeview1;
	GtkDialog* dlg;
	GtkEntry* entryKey;
	GtkEntry* entryName;
	GtkComboBox* comboboxType;
	GtkButton* buttonCancel;
	GtkButton* buttonSave;
	gint ttId;
};

struct _WoocommerceWidgetTransactionTypesClass {
	GtkBoxClass parent_class;
};

struct _WoocommerceWidgetUnitOfMeasurement {
	GtkBox parent_instance;
	WoocommerceWidgetUnitOfMeasurementPrivate * priv;
	GtkBuilder* ui;
	GtkBox* boxUm;
	GtkImage* image1;
	GtkButton* buttonNew;
	GtkButton* buttonEdit;
	GtkButton* buttonDelete;
	GtkTreeView* treeview1;
	GtkDialog* dlg;
	GtkEntry* entryCode;
	GtkEntry* entryName;
	GtkEntry* entryQty;
	GtkButton* buttonSave;
	GtkButton* buttonCancel;
	gint theId;
};

struct _WoocommerceWidgetUnitOfMeasurementClass {
	GtkBoxClass parent_class;
};

struct _WoocommerceWidgetViewTransaction {
	GtkBox parent_instance;
	WoocommerceWidgetViewTransactionPrivate * priv;
	GtkBuilder* ui;
	GtkBox* boxViewTransaction;
	GtkImage* image1;
	GtkLabel* labelTitle;
	GtkTreeView* treeviewItems;
	GtkLabel* labelSubtotal;
	GtkLabel* labelDiscount;
	GtkLabel* labelTotal;
	GtkButton* buttonClose;
	GtkButton* buttonPrint;
	GtkButton* buttonRefund;
	GObject* transaction;
	gint transactionId;
};

struct _WoocommerceWidgetViewTransactionClass {
	GtkBoxClass parent_class;
};

typedef enum  {
	WOOCOMMERCE_WIDGET_VIEW_TRANSACTION_COLUMNS_COUNT,
	WOOCOMMERCE_WIDGET_VIEW_TRANSACTION_COLUMNS_ITEM,
	WOOCOMMERCE_WIDGET_VIEW_TRANSACTION_COLUMNS_QTY,
	WOOCOMMERCE_WIDGET_VIEW_TRANSACTION_COLUMNS_PRICE,
	WOOCOMMERCE_WIDGET_VIEW_TRANSACTION_COLUMNS_TOTAL,
	WOOCOMMERCE_WIDGET_VIEW_TRANSACTION_COLUMNS_N_COLS
} WoocommerceWidgetViewTransactionColumns;

struct _WoocommerceInventoryHelper {
	GObject parent_instance;
	WoocommerceInventoryHelperPrivate * priv;
};

struct _WoocommerceInventoryHelperClass {
	GObjectClass parent_class;
};


GType woocommerce_sb_moduleinventory_get_type (void) G_GNUC_CONST;
void woocommerce_sb_moduleinventory_sidebar_init (SinticBoliviaSBModuleArgs* harg);
void woocommerce_sb_moduleinventory_init_menu_management (SinticBoliviaSBModuleArgs* args);
void woocommerce_sb_moduleinventory_hook_reports_menu (SinticBoliviaSBModuleArgs* args);
WoocommerceSB_ModuleInventory* woocommerce_sb_moduleinventory_new (void);
WoocommerceSB_ModuleInventory* woocommerce_sb_moduleinventory_construct (GType object_type);
GType sb_get_module_type (GModule* inventory_module);
GType epos_eassembly_component_get_type (void) G_GNUC_CONST;
GType epos_eproduct_get_type (void) G_GNUC_CONST;
EPosEAssemblyComponent* epos_eassembly_component_new (void);
EPosEAssemblyComponent* epos_eassembly_component_construct (GType object_type);
EPosEAssemblyComponent* epos_eassembly_component_new_from_id (gint id);
EPosEAssemblyComponent* epos_eassembly_component_construct_from_id (GType object_type, gint id);
EPosEAssemblyComponent* epos_eassembly_component_new_from_assembly_id_and_product_id (gint assembly_id, gint product_id);
EPosEAssemblyComponent* epos_eassembly_component_construct_from_assembly_id_and_product_id (GType object_type, gint assembly_id, gint product_id);
void epos_eassembly_component_GetDbData (EPosEAssemblyComponent* self, gint id);
void epos_eassembly_component_SetDbData (EPosEAssemblyComponent* self, SinticBoliviaDatabaseSBDBRow* data);
gint epos_eassembly_component_get_Id (EPosEAssemblyComponent* self);
gint epos_eassembly_component_get_ProductId (EPosEAssemblyComponent* self);
gint epos_eassembly_component_get_QtyRequired (EPosEAssemblyComponent* self);
gint epos_eassembly_component_get_UOMId (EPosEAssemblyComponent* self);
GType epos_eassembly_get_type (void) G_GNUC_CONST;
EPosEAssembly* epos_eassembly_new (void);
EPosEAssembly* epos_eassembly_construct (GType object_type);
EPosEAssembly* epos_eassembly_new_from_id (gint id);
EPosEAssembly* epos_eassembly_construct_from_id (GType object_type, gint id);
void epos_eassembly_GetDbData (EPosEAssembly* self, gint id);
void epos_eassembly_GetDbComponents (EPosEAssembly* self);
gint epos_eassembly_get_Id (EPosEAssembly* self);
const gchar* epos_eassembly_get_Name (EPosEAssembly* self);
const gchar* epos_eassembly_get_Description (EPosEAssembly* self);
gint epos_eassembly_get_StoreId (EPosEAssembly* self);
GeeArrayList* epos_eassembly_get_Components (EPosEAssembly* self);
GType woocommerce_pdf_cell_get_type (void) G_GNUC_CONST;
WoocommercePdfCell* woocommerce_pdf_cell_new (HPDF_Page* page);
WoocommercePdfCell* woocommerce_pdf_cell_construct (GType object_type, HPDF_Page* page);
void woocommerce_pdf_cell_SetPage (WoocommercePdfCell* self, HPDF_Page* page);
void woocommerce_pdf_cell_SetText (WoocommercePdfCell* self, const gchar* text);
void woocommerce_pdf_cell_Draw (WoocommercePdfCell* self, gfloat x, gfloat y);
GeeArrayList* woocommerce_pdf_cell_BuildCellText (HPDF_Page* _page, gfloat cell_width, const gchar* text);
GType woocommerce_pdf_row_get_type (void) G_GNUC_CONST;
WoocommercePdfRow* woocommerce_pdf_row_new (HPDF_Page* page);
WoocommercePdfRow* woocommerce_pdf_row_construct (GType object_type, HPDF_Page* page);
void woocommerce_pdf_row_SetPage (WoocommercePdfRow* self, HPDF_Page* page);
gint woocommerce_pdf_row_AddCell (WoocommercePdfRow* self, WoocommercePdfCell* cell);
void woocommerce_pdf_row_calculateRowSize (WoocommercePdfRow* self);
void woocommerce_pdf_row_Draw (WoocommercePdfRow* self, gfloat x, gfloat y);
gint woocommerce_pdf_row_get_Size (WoocommercePdfRow* self);
GType woocommerce_catalog_get_type (void) G_GNUC_CONST;
WoocommerceCatalog* woocommerce_catalog_new (void);
WoocommerceCatalog* woocommerce_catalog_construct (GType object_type);
void woocommerce_catalog_SetMargins (WoocommerceCatalog* self, gfloat top, gfloat right, gfloat bottom, gfloat left);
void woocommerce_catalog_WriteText (WoocommerceCatalog* self, const gchar* text, const gchar* align, gfloat font_size, const gchar* color);
void woocommerce_catalog_SetColumnsWidth (WoocommerceCatalog* self, gfloat* widths, int widths_length1);
void woocommerce_catalog_SetTableHeaders (WoocommerceCatalog* self, gchar** headers, int headers_length1);
void woocommerce_catalog_AddCell (WoocommerceCatalog* self, const gchar* text, const gchar* align, gfloat font_size, gboolean border, gint span, const gchar* bg, const gchar* fg);
void woocommerce_catalog_Draw (WoocommerceCatalog* self);
gboolean woocommerce_catalog_CheckNewPage (WoocommerceCatalog* self, gfloat obj_height);
gchar* woocommerce_catalog_Save (WoocommerceCatalog* self, const gchar* name);
void woocommerce_catalog_Preview (WoocommerceCatalog* self, const gchar* name);
void woocommerce_catalog_Print (WoocommerceCatalog* self, const gchar* name, const gchar* printer);
GType woocommerce_order_get_type (void) G_GNUC_CONST;
WoocommerceOrder* woocommerce_order_new (void);
WoocommerceOrder* woocommerce_order_construct (GType object_type);
WoocommerceOrder* woocommerce_order_new_from_id (gint order_id);
WoocommerceOrder* woocommerce_order_construct_from_id (GType object_type, gint order_id);
void woocommerce_order_GetDbData (WoocommerceOrder* self, gint order_id);
void woocommerce_order_SetDbData (WoocommerceOrder* self, SinticBoliviaDatabaseSBDBRow* row);
void woocommerce_order_GetDbItems (WoocommerceOrder* self, gint order_id);
gint woocommerce_order_get_Id (WoocommerceOrder* self);
const gchar* woocommerce_order_get_Code (WoocommerceOrder* self);
gint woocommerce_order_get_StoreId (WoocommerceOrder* self);
gint woocommerce_order_get_NumItems (WoocommerceOrder* self);
gdouble woocommerce_order_get_SubTotal (WoocommerceOrder* self);
gdouble woocommerce_order_get_Discount (WoocommerceOrder* self);
gdouble woocommerce_order_get_Total (WoocommerceOrder* self);
const gchar* woocommerce_order_get_Details (WoocommerceOrder* self);
const gchar* woocommerce_order_get_Status (WoocommerceOrder* self);
gint woocommerce_order_get_UserId (WoocommerceOrder* self);
const gchar* woocommerce_order_get_LastModificationDate (WoocommerceOrder* self);
const gchar* woocommerce_order_get_CreationDate (WoocommerceOrder* self);
GeeArrayList* woocommerce_order_get_Items (WoocommerceOrder* self);
EPosEProduct* epos_eproduct_new (void);
EPosEProduct* epos_eproduct_construct (GType object_type);
EPosEProduct* epos_eproduct_new_from_id (gint id);
EPosEProduct* epos_eproduct_construct_from_id (GType object_type, gint id);
EPosEProduct* epos_eproduct_new_with_db_data (SinticBoliviaDatabaseSBDBRow* row);
EPosEProduct* epos_eproduct_construct_with_db_data (GType object_type, SinticBoliviaDatabaseSBDBRow* row);
void epos_eproduct_GetDbData (EPosEProduct* self, gint id);
void epos_eproduct_SetDbData (EPosEProduct* self, SinticBoliviaDatabaseSBDBRow* row, gboolean get_cats, gboolean get_images);
void epos_eproduct_getCategories (EPosEProduct* self);
void epos_eproduct_getImages (EPosEProduct* self);
gchar* epos_eproduct_GetThumbnail (EPosEProduct* self);
glong epos_eproduct_AddMeta (gint pid, const gchar* meta_key, GValue* meta_value);
gchar* epos_eproduct_GetMeta (gint pid, const gchar* meta_key);
gboolean epos_eproduct_UpdateMeta (gint pid, const gchar* meta_key, GValue* meta_value);
gint epos_eproduct_get_Id (EPosEProduct* self);
const gchar* epos_eproduct_get_Code (EPosEProduct* self);
const gchar* epos_eproduct_get_InternalCode (EPosEProduct* self);
gint epos_eproduct_get_ExternId (EPosEProduct* self);
const gchar* epos_eproduct_get_Name (EPosEProduct* self);
const gchar* epos_eproduct_get_Description (EPosEProduct* self);
const gchar* epos_eproduct_get_SerialNumber (EPosEProduct* self);
const gchar* epos_eproduct_get_Barcode (EPosEProduct* self);
gdouble epos_eproduct_get_Cost (EPosEProduct* self);
gdouble epos_eproduct_get_Price (EPosEProduct* self);
gdouble epos_eproduct_get_Price2 (EPosEProduct* self);
gint epos_eproduct_get_Quantity (EPosEProduct* self);
gint epos_eproduct_get_MinStock (EPosEProduct* self);
gint epos_eproduct_get_StoreId (EPosEProduct* self);
void epos_eproduct_set_StoreId (EPosEProduct* self, gint value);
gint epos_eproduct_get_AuthorId (EPosEProduct* self);
const gchar* epos_eproduct_get_Status (EPosEProduct* self);
GeeArrayList* epos_eproduct_get_ImageFiles (EPosEProduct* self);
GeeArrayList* epos_eproduct_get_CategoriesIds (EPosEProduct* self);
GeeArrayList* epos_eproduct_get_Categories (EPosEProduct* self);
gint epos_eproduct_get_LineId (EPosEProduct* self);
gint epos_eproduct_get_DepartmentId (EPosEProduct* self);
gint epos_eproduct_get_UnitMeasureId (EPosEProduct* self);
GType woocommerce_purchase_order_get_type (void) G_GNUC_CONST;
WoocommercePurchaseOrder* woocommerce_purchase_order_new (void);
WoocommercePurchaseOrder* woocommerce_purchase_order_construct (GType object_type);
WoocommercePurchaseOrder* woocommerce_purchase_order_new_from_id (gint order_id);
WoocommercePurchaseOrder* woocommerce_purchase_order_construct_from_id (GType object_type, gint order_id);
GType woocommerce_sale_get_type (void) G_GNUC_CONST;
WoocommerceSale* woocommerce_sale_new (void);
WoocommerceSale* woocommerce_sale_construct (GType object_type);
GType epos_esupplier_get_type (void) G_GNUC_CONST;
EPosESupplier* epos_esupplier_new (void);
EPosESupplier* epos_esupplier_construct (GType object_type);
EPosESupplier* epos_esupplier_new_from_id (gint supplier_id);
EPosESupplier* epos_esupplier_construct_from_id (GType object_type, gint supplier_id);
void epos_esupplier_GetDbData (EPosESupplier* self, gint supplier_id);
gint epos_esupplier_get_Id (EPosESupplier* self);
gint epos_esupplier_get_StoreId (EPosESupplier* self);
const gchar* epos_esupplier_get_Name (EPosESupplier* self);
const gchar* epos_esupplier_get_Address (EPosESupplier* self);
const gchar* epos_esupplier_get_Telephone1 (EPosESupplier* self);
const gchar* epos_esupplier_get_Telephone2 (EPosESupplier* self);
const gchar* epos_esupplier_get_Fax (EPosESupplier* self);
const gchar* epos_esupplier_get_City (EPosESupplier* self);
const gchar* epos_esupplier_get_Email (EPosESupplier* self);
const gchar* epos_esupplier_get_ContactPerson (EPosESupplier* self);
const gchar* epos_esupplier_get_Key (EPosESupplier* self);
GType woocommerce_invoice_ticket_invoice_get_type (void) G_GNUC_CONST;
WoocommerceInvoiceTicketInvoice* woocommerce_invoice_ticket_invoice_new (void);
WoocommerceInvoiceTicketInvoice* woocommerce_invoice_ticket_invoice_construct (GType object_type);
WoocommerceInvoiceTicketInvoice* woocommerce_invoice_ticket_invoice_new_with_context (cairo_t* ctx);
WoocommerceInvoiceTicketInvoice* woocommerce_invoice_ticket_invoice_construct_with_context (GType object_type, cairo_t* ctx);
cairo_t* woocommerce_invoice_ticket_invoice_GetContext (WoocommerceInvoiceTicketInvoice* self);
void woocommerce_invoice_ticket_invoice_SetContext (WoocommerceInvoiceTicketInvoice* self, cairo_t* ctx);
void woocommerce_invoice_ticket_invoice_SetWidth (WoocommerceInvoiceTicketInvoice* self, gint width);
void woocommerce_invoice_ticket_invoice_SetHeight (WoocommerceInvoiceTicketInvoice* self, gint height);
void woocommerce_invoice_ticket_invoice_AddLine (WoocommerceInvoiceTicketInvoice* self, const gchar* text, const gchar* align);
void woocommerce_invoice_ticket_invoice_Draw (WoocommerceInvoiceTicketInvoice* self);
gchar* woocommerce_invoice_ticket_invoice_TextLeft (WoocommerceInvoiceTicketInvoice* self, const gchar* _str);
gchar* woocommerce_invoice_ticket_invoice_TextCenter (WoocommerceInvoiceTicketInvoice* self, const gchar* par1);
gchar* woocommerce_invoice_ticket_invoice_TextRight (WoocommerceInvoiceTicketInvoice* self, const gchar* par1);
gfloat woocommerce_invoice_ticket_invoice_Pixel2Mm (WoocommerceInvoiceTicketInvoice* self, gfloat _pix);
gfloat woocommerce_invoice_ticket_invoice_Mm2Pixel (WoocommerceInvoiceTicketInvoice* self, gfloat _mm);
void woocommerce_invoice_ticket_invoice_buildPageFrame (WoocommerceInvoiceTicketInvoice* self);
GType epos_widget_assemblies_get_type (void) G_GNUC_CONST;
EPosWidgetAssemblies* epos_widget_assemblies_new (void);
EPosWidgetAssemblies* epos_widget_assemblies_construct (GType object_type);
void epos_widget_assemblies_Build (EPosWidgetAssemblies* self);
void epos_widget_assemblies_SetEvents (EPosWidgetAssemblies* self);
void epos_widget_assemblies_Refresh (EPosWidgetAssemblies* self);
void epos_widget_assemblies_OnButtonAddClicked (EPosWidgetAssemblies* self);
void epos_widget_assemblies_OnButtonEditClicked (EPosWidgetAssemblies* self);
void epos_widget_assemblies_OnButtonDeleteClicked (EPosWidgetAssemblies* self);
GType woocommerce_widget_currencies_get_type (void) G_GNUC_CONST;
WoocommerceWidgetCurrencies* woocommerce_widget_currencies_new (void);
WoocommerceWidgetCurrencies* woocommerce_widget_currencies_construct (GType object_type);
void woocommerce_widget_currencies_Build (WoocommerceWidgetCurrencies* self);
void woocommerce_widget_currencies_SetEvents (WoocommerceWidgetCurrencies* self);
void woocommerce_widget_currencies_Refresh (WoocommerceWidgetCurrencies* self);
void woocommerce_widget_currencies_OnButtonAddClicked (WoocommerceWidgetCurrencies* self);
void woocommerce_widget_currencies_OnButtonEditClicked (WoocommerceWidgetCurrencies* self);
void woocommerce_widget_currencies_OnButtonDeleteClicked (WoocommerceWidgetCurrencies* self);
void woocommerce_widget_currencies_OnButtonSaveClicked (WoocommerceWidgetCurrencies* self);
void woocommerce_widget_currencies_OnButtonCancelClicked (WoocommerceWidgetCurrencies* self);
GType woocommerce_widget_product_departments_get_type (void) G_GNUC_CONST;
WoocommerceWidgetProductDepartments* woocommerce_widget_product_departments_new (void);
WoocommerceWidgetProductDepartments* woocommerce_widget_product_departments_construct (GType object_type);
void woocommerce_widget_product_departments_Build (WoocommerceWidgetProductDepartments* self);
void woocommerce_widget_product_departments_Refresh (WoocommerceWidgetProductDepartments* self);
void woocommerce_widget_product_departments_SetEvents (WoocommerceWidgetProductDepartments* self);
void woocommerce_widget_product_departments_OnButtonNewClicked (WoocommerceWidgetProductDepartments* self);
void woocommerce_widget_product_departments_OnButtonEditClicked (WoocommerceWidgetProductDepartments* self);
void woocommerce_widget_product_departments_OnButtonDeleteClicked (WoocommerceWidgetProductDepartments* self);
void woocommerce_widget_product_departments_OnButtonCancelClicked (WoocommerceWidgetProductDepartments* self);
void woocommerce_widget_product_departments_OnButtonSaveClicked (WoocommerceWidgetProductDepartments* self);
GType woocommerce_widget_iventory_get_type (void) G_GNUC_CONST;
WoocommerceWidgetIventory* woocommerce_widget_iventory_new (void);
WoocommerceWidgetIventory* woocommerce_widget_iventory_construct (GType object_type);
void woocommerce_widget_iventory_SetEvents (WoocommerceWidgetIventory* self);
void woocommerce_widget_iventory_BuildStores (WoocommerceWidgetIventory* self);
void woocommerce_widget_iventory_BuildCategories (WoocommerceWidgetIventory* self);
void woocommerce_widget_iventory_BuildProducts (WoocommerceWidgetIventory* self);
void woocommerce_widget_iventory_RefreshStores (WoocommerceWidgetIventory* self);
void woocommerce_widget_iventory_RefreshCategories (WoocommerceWidgetIventory* self, gint store_id);
void woocommerce_widget_iventory_RefreshProducts (WoocommerceWidgetIventory* self, gint store_id, gint category_id);
void woocommerce_widget_iventory_OnButtonAddStoreClicked (WoocommerceWidgetIventory* self);
void woocommerce_widget_iventory_OnButtonEditStoreClicked (WoocommerceWidgetIventory* self);
void woocommerce_widget_iventory_OnButtonDeleteStoreClicked (WoocommerceWidgetIventory* self);
void woocommerce_widget_iventory_OnButtonSaveStoreClicked (WoocommerceWidgetIventory* self);
void woocommerce_widget_iventory_OnButtonCancelStoreClicked (WoocommerceWidgetIventory* self);
void woocommerce_widget_iventory_OnButtonNewCategoryClicked (WoocommerceWidgetIventory* self);
void woocommerce_widget_iventory_OnButtonEditCategoryClicked (WoocommerceWidgetIventory* self);
void woocommerce_widget_iventory_OnButtonDeleteCategoryClicked (WoocommerceWidgetIventory* self);
void woocommerce_widget_iventory_OnComboBoxCategoriesStoreChanged (WoocommerceWidgetIventory* self);
void woocommerce_widget_iventory_OnButtonSaveCategoryClicked (WoocommerceWidgetIventory* self);
void woocommerce_widget_iventory_OnButtonNewProductClicked (WoocommerceWidgetIventory* self);
void woocommerce_widget_iventory_OnButtonEditProductClicked (WoocommerceWidgetIventory* self);
void woocommerce_widget_iventory_OnComboboxStoreChanged (WoocommerceWidgetIventory* self);
void woocommerce_widget_iventory_OnComboboxCategoryChanged (WoocommerceWidgetIventory* self);
void woocommerce_widget_iventory_OnButtonRefreshProductsClicked (WoocommerceWidgetIventory* self);
void woocommerce_widget_iventory_OnPrintCatalogActivated (WoocommerceWidgetIventory* self);
void woocommerce_widget_iventory_OnPrintLabelsActivated (WoocommerceWidgetIventory* self);
GType epos_widget_item_types_get_type (void) G_GNUC_CONST;
EPosWidgetItemTypes* epos_widget_item_types_new (void);
EPosWidgetItemTypes* epos_widget_item_types_construct (GType object_type);
void epos_widget_item_types_Build (EPosWidgetItemTypes* self);
void epos_widget_item_types_SetEvents (EPosWidgetItemTypes* self);
void epos_widget_item_types_Refresh (EPosWidgetItemTypes* self);
void epos_widget_item_types_OnButtonAddClicked (EPosWidgetItemTypes* self);
void epos_widget_item_types_OnButtonEditClicked (EPosWidgetItemTypes* self);
void epos_widget_item_types_OnButtonDeleteClicked (EPosWidgetItemTypes* self);
void epos_widget_item_types_OnButtonCancelClicked (EPosWidgetItemTypes* self);
void epos_widget_item_types_OnButtonSaveClicked (EPosWidgetItemTypes* self);
GType epos_window_new_assembly_get_type (void) G_GNUC_CONST;
EPosWindowNewAssembly* epos_window_new_assembly_new (void);
EPosWindowNewAssembly* epos_window_new_assembly_construct (GType object_type);
void epos_window_new_assembly_Build (EPosWindowNewAssembly* self);
void epos_window_new_assembly_FillForm (EPosWindowNewAssembly* self);
void epos_window_new_assembly_SetEvents (EPosWindowNewAssembly* self);
gboolean epos_window_new_assembly_OnEntrySearchProductKeyReleaseEvent (EPosWindowNewAssembly* self, GdkEventKey* event);
gboolean epos_window_new_assembly_OnSearchProductMatchCompletion (EPosWindowNewAssembly* self, GtkTreeModel* model, GtkTreeIter* iter);
void epos_window_new_assembly_OnButtonAddClicked (EPosWindowNewAssembly* self);
void epos_window_new_assembly_AddProduct (EPosWindowNewAssembly* self, gint product_id, gint qty, gint uom_id);
void epos_window_new_assembly_OnButtonCancelClicked (EPosWindowNewAssembly* self);
void epos_window_new_assembly_OnButtonSaveClicked (EPosWindowNewAssembly* self);
void epos_window_new_assembly_SetAssembly (EPosWindowNewAssembly* self, EPosEAssembly* assembly);
gint epos_window_new_assembly_get_StoreId (EPosWindowNewAssembly* self);
void epos_window_new_assembly_set_StoreId (EPosWindowNewAssembly* self, gint value);
GType epos_widget_new_product_get_type (void) G_GNUC_CONST;
EPosWidgetNewProduct* epos_widget_new_product_new (void);
EPosWidgetNewProduct* epos_widget_new_product_construct (GType object_type);
EPosWidgetNewProduct* epos_widget_new_product_new_with_product (EPosEProduct* prod);
EPosWidgetNewProduct* epos_widget_new_product_construct_with_product (GType object_type, EPosEProduct* prod);
void epos_widget_new_product_Build (EPosWidgetNewProduct* self);
void epos_widget_new_product_SetEvents (EPosWidgetNewProduct* self);
void epos_widget_new_product_FillCategories (EPosWidgetNewProduct* self, gint store_id);
void epos_widget_new_product_OnButtonAddImageClicked (EPosWidgetNewProduct* self);
void epos_widget_new_product_addImage (EPosWidgetNewProduct* self, const gchar* filename, gint id);
void epos_widget_new_product_OnButtonCancelClicked (EPosWidgetNewProduct* self);
void epos_widget_new_product_OnButtonSaveClicked (EPosWidgetNewProduct* self);
void epos_widget_new_product_OnButtonAddSnClicked (EPosWidgetNewProduct* self);
void epos_widget_new_product_OnButtonRemoveSnClicked (EPosWidgetNewProduct* self);
gboolean epos_widget_new_product_OnEntrySearchSupplierKeyReleaseEvent (EPosWidgetNewProduct* self, GdkEventKey* event);
gboolean epos_widget_new_product_OnSearchSupplierCompletionMatchSelected (EPosWidgetNewProduct* self, GtkTreeModel* model, GtkTreeIter* iter);
void epos_widget_new_product_OnButtonAddSupplierClicked (EPosWidgetNewProduct* self);
void epos_widget_new_product_AddSupplier (EPosWidgetNewProduct* self, EPosESupplier* supplier);
GType woocommerce_widget_new_supplier_get_type (void) G_GNUC_CONST;
WoocommerceWidgetNewSupplier* woocommerce_widget_new_supplier_new (void);
WoocommerceWidgetNewSupplier* woocommerce_widget_new_supplier_construct (GType object_type);
void woocommerce_widget_new_supplier_Build (WoocommerceWidgetNewSupplier* self);
void woocommerce_widget_new_supplier_FillForm (WoocommerceWidgetNewSupplier* self);
void woocommerce_widget_new_supplier_SetEvents (WoocommerceWidgetNewSupplier* self);
void woocommerce_widget_new_supplier_OnButtonCancelClicked (WoocommerceWidgetNewSupplier* self);
void woocommerce_widget_new_supplier_OnButtonSaveClicked (WoocommerceWidgetNewSupplier* self);
void woocommerce_widget_new_supplier_SetSupplier (WoocommerceWidgetNewSupplier* self, gint supplier_id);
GType woocommerce_widget_product_lines_get_type (void) G_GNUC_CONST;
WoocommerceWidgetProductLines* woocommerce_widget_product_lines_new (void);
WoocommerceWidgetProductLines* woocommerce_widget_product_lines_construct (GType object_type);
void woocommerce_widget_product_lines_Build (WoocommerceWidgetProductLines* self);
void woocommerce_widget_product_lines_SetEvents (WoocommerceWidgetProductLines* self);
void woocommerce_widget_product_lines_Refresh (WoocommerceWidgetProductLines* self);
void woocommerce_widget_product_lines_OnButtonNewClicked (WoocommerceWidgetProductLines* self);
void woocommerce_widget_product_lines_OnButtonEditClicked (WoocommerceWidgetProductLines* self);
void woocommerce_widget_product_lines_OnButtonDeleteClicked (WoocommerceWidgetProductLines* self);
void woocommerce_widget_product_lines_OnButtonCancelClicked (WoocommerceWidgetProductLines* self);
void woocommerce_widget_product_lines_OnButtonSaveClicked (WoocommerceWidgetProductLines* self);
GType woocommerce_widget_purchase_orders_get_type (void) G_GNUC_CONST;
GType woocommerce_widget_purchase_orders_columns_get_type (void) G_GNUC_CONST;
WoocommerceWidgetPurchaseOrders* woocommerce_widget_purchase_orders_new (void);
WoocommerceWidgetPurchaseOrders* woocommerce_widget_purchase_orders_construct (GType object_type);
void woocommerce_widget_purchase_orders_Build (WoocommerceWidgetPurchaseOrders* self);
void woocommerce_widget_purchase_orders_FillForm (WoocommerceWidgetPurchaseOrders* self);
void woocommerce_widget_purchase_orders_SetEvents (WoocommerceWidgetPurchaseOrders* self);
void woocommerce_widget_purchase_orders_OnComboBoxStoresChanged (WoocommerceWidgetPurchaseOrders* self);
void woocommerce_widget_purchase_orders_OnComboBoxStatusChanged (WoocommerceWidgetPurchaseOrders* self);
void woocommerce_widget_purchase_orders_OnButtonNewClicked (WoocommerceWidgetPurchaseOrders* self);
void woocommerce_widget_purchase_orders_OnButtonEditClicked (WoocommerceWidgetPurchaseOrders* self);
void woocommerce_widget_purchase_orders_OnButtonReceiveClicked (WoocommerceWidgetPurchaseOrders* self);
void woocommerce_widget_purchase_orders_OnButtonCancelClicked (WoocommerceWidgetPurchaseOrders* self);
void woocommerce_widget_purchase_orders_GetOrders (WoocommerceWidgetPurchaseOrders* self, gint store_id, const gchar* status, gint page, gint limit);
GType woocommerce_widget_purchase_order_get_type (void) G_GNUC_CONST;
GType woocommerce_widget_purchase_order_columns_get_type (void) G_GNUC_CONST;
WoocommerceWidgetPurchaseOrder* woocommerce_widget_purchase_order_new (void);
WoocommerceWidgetPurchaseOrder* woocommerce_widget_purchase_order_construct (GType object_type);
void woocommerce_widget_purchase_order_Build (WoocommerceWidgetPurchaseOrder* self);
void woocommerce_widget_purchase_order_SetEvents (WoocommerceWidgetPurchaseOrder* self);
void woocommerce_widget_purchase_order_FillForm (WoocommerceWidgetPurchaseOrder* self);
gboolean woocommerce_widget_purchase_order_OnEntrySearchProductKeyReleaseEvent (WoocommerceWidgetPurchaseOrder* self, GdkEventKey* event);
gboolean woocommerce_widget_purchase_order_OnCompletionMatchSelected (WoocommerceWidgetPurchaseOrder* self, GtkTreeModel* model, GtkTreeIter* iter);
gboolean woocommerce_widget_purchase_order_isProductInOrder (WoocommerceWidgetPurchaseOrder* self, gint product_id, GtkTreeIter* o_iter);
void woocommerce_widget_purchase_order_OnButtonAddProductClicked (WoocommerceWidgetPurchaseOrder* self);
void woocommerce_widget_purchase_order_calculateRowTotal (WoocommerceWidgetPurchaseOrder* self, GtkTreeIter* iter);
void woocommerce_widget_purchase_order_calculateTotals (WoocommerceWidgetPurchaseOrder* self);
gboolean woocommerce_widget_purchase_order_OnTreeViewProductsButtonReleaseEvent (WoocommerceWidgetPurchaseOrder* self, GdkEventButton* args);
void woocommerce_widget_purchase_order_OnButtonSaveClicked (WoocommerceWidgetPurchaseOrder* self);
void woocommerce_widget_purchase_order_OnButtonCancelClicked (WoocommerceWidgetPurchaseOrder* self);
void woocommerce_widget_purchase_order_SetOrder (WoocommerceWidgetPurchaseOrder* self, WoocommercePurchaseOrder* order);
void woocommerce_widget_purchase_order_OnButtonReceiveClicked (WoocommerceWidgetPurchaseOrder* self);
void woocommerce_widget_purchase_order_set_Title (WoocommerceWidgetPurchaseOrder* self, const gchar* value);
GType woocommerce_widget_suppliers_get_type (void) G_GNUC_CONST;
GType woocommerce_widget_suppliers_columns_get_type (void) G_GNUC_CONST;
WoocommerceWidgetSuppliers* woocommerce_widget_suppliers_new (void);
WoocommerceWidgetSuppliers* woocommerce_widget_suppliers_construct (GType object_type);
void woocommerce_widget_suppliers_Build (WoocommerceWidgetSuppliers* self);
void woocommerce_widget_suppliers_FillForm (WoocommerceWidgetSuppliers* self);
void woocommerce_widget_suppliers_SetEvents (WoocommerceWidgetSuppliers* self);
void woocommerce_widget_suppliers_OnButtonNewClicked (WoocommerceWidgetSuppliers* self);
void woocommerce_widget_suppliers_OnButtonEditClicked (WoocommerceWidgetSuppliers* self);
void woocommerce_widget_suppliers_FillSuppliers (WoocommerceWidgetSuppliers* self);
GType woocommerce_widget_transactions_get_type (void) G_GNUC_CONST;
GType woocommerce_widget_transactions_columns_get_type (void) G_GNUC_CONST;
WoocommerceWidgetTransactions* woocommerce_widget_transactions_new (void);
WoocommerceWidgetTransactions* woocommerce_widget_transactions_construct (GType object_type);
void woocommerce_widget_transactions_Build (WoocommerceWidgetTransactions* self);
void woocommerce_widget_transactions_SetEvents (WoocommerceWidgetTransactions* self);
void woocommerce_widget_transactions_OnComboBoxStoreChanged (WoocommerceWidgetTransactions* self);
void woocommerce_widget_transactions_OnComboBoxTransactionTypeChanged (WoocommerceWidgetTransactions* self);
void woocommerce_widget_transactions_FillTransactions (WoocommerceWidgetTransactions* self, GeeArrayList* records);
void woocommerce_widget_transactions_OnButtonViewClicked (WoocommerceWidgetTransactions* self);
GType woocommerce_widget_transaction_types_get_type (void) G_GNUC_CONST;
WoocommerceWidgetTransactionTypes* woocommerce_widget_transaction_types_new (void);
WoocommerceWidgetTransactionTypes* woocommerce_widget_transaction_types_construct (GType object_type);
void woocommerce_widget_transaction_types_Build (WoocommerceWidgetTransactionTypes* self);
void woocommerce_widget_transaction_types_BuildDialog (WoocommerceWidgetTransactionTypes* self);
void woocommerce_widget_transaction_types_SetEvents (WoocommerceWidgetTransactionTypes* self);
void woocommerce_widget_transaction_types_Refresh (WoocommerceWidgetTransactionTypes* self);
void woocommerce_widget_transaction_types_OnButtonNewClicked (WoocommerceWidgetTransactionTypes* self);
void woocommerce_widget_transaction_types_OnButtonEditClicked (WoocommerceWidgetTransactionTypes* self);
void woocommerce_widget_transaction_types_OnButtonDeleteClicked (WoocommerceWidgetTransactionTypes* self);
void woocommerce_widget_transaction_types_OnButtonCancelClicked (WoocommerceWidgetTransactionTypes* self);
void woocommerce_widget_transaction_types_OnButtonSaveClicked (WoocommerceWidgetTransactionTypes* self);
GType woocommerce_widget_unit_of_measurement_get_type (void) G_GNUC_CONST;
WoocommerceWidgetUnitOfMeasurement* woocommerce_widget_unit_of_measurement_new (void);
WoocommerceWidgetUnitOfMeasurement* woocommerce_widget_unit_of_measurement_construct (GType object_type);
void woocommerce_widget_unit_of_measurement_Build (WoocommerceWidgetUnitOfMeasurement* self);
void woocommerce_widget_unit_of_measurement_SetEvents (WoocommerceWidgetUnitOfMeasurement* self);
void woocommerce_widget_unit_of_measurement_Refresh (WoocommerceWidgetUnitOfMeasurement* self);
void woocommerce_widget_unit_of_measurement_OnButtonNewClicked (WoocommerceWidgetUnitOfMeasurement* self);
void woocommerce_widget_unit_of_measurement_OnButtonEditClicked (WoocommerceWidgetUnitOfMeasurement* self);
void woocommerce_widget_unit_of_measurement_OnButtonDeleteClicked (WoocommerceWidgetUnitOfMeasurement* self);
void woocommerce_widget_unit_of_measurement_OnButtonCancelClicked (WoocommerceWidgetUnitOfMeasurement* self);
void woocommerce_widget_unit_of_measurement_OnButtonSaveClicked (WoocommerceWidgetUnitOfMeasurement* self);
GType woocommerce_widget_view_transaction_get_type (void) G_GNUC_CONST;
GType woocommerce_widget_view_transaction_columns_get_type (void) G_GNUC_CONST;
WoocommerceWidgetViewTransaction* woocommerce_widget_view_transaction_new (void);
WoocommerceWidgetViewTransaction* woocommerce_widget_view_transaction_construct (GType object_type);
void woocommerce_widget_view_transaction_Build (WoocommerceWidgetViewTransaction* self);
void woocommerce_widget_view_transaction_SetEvents (WoocommerceWidgetViewTransaction* self);
void woocommerce_widget_view_transaction_OnButtonPrintClicked (WoocommerceWidgetViewTransaction* self);
void woocommerce_widget_view_transaction_SetTransaction (WoocommerceWidgetViewTransaction* self, GObject* t);
GType woocommerce_inventory_helper_get_type (void) G_GNUC_CONST;
GeeArrayList* woocommerce_inventory_helper_GetStores (void);
GeeArrayList* woocommerce_inventory_helper_GetCategories (gint store_id, guint parent_id);
GeeArrayList* woocommerce_inventory_helper_GetProducts (gint page, gint rows_per_page, glong* total_records);
GeeArrayList* woocommerce_inventory_helper_GetStoreProducts (gint store_id, gint page, gint rows_per_page, glong* total_records);
GeeArrayList* woocommerce_inventory_helper_GetCategoryProducts (gint cat_id, gint page, gint rows_per_page, glong* total_records);
gboolean woocommerce_inventory_helper_DeleteStore (gint store_id);
GeeArrayList* woocommerce_inventory_helper_GetTransactions (gint store_id, gint type_id, gint page, gint rows_per_page, gint* total_rows);
GeeArrayList* woocommerce_inventory_helper_GetPurchaseOrders (gint store_id, gint page, gint rows_per_page, gint* total_rows);
GeeArrayList* woocommerce_inventory_helper_GetDepartments (void);
GeeArrayList* woocommerce_inventory_helper_GetUnitOfMeasures (void);
GeeHashMap* woocommerce_inventory_helper_GetUnitOfMeasure (gint id);
WoocommerceInventoryHelper* woocommerce_inventory_helper_new (void);
WoocommerceInventoryHelper* woocommerce_inventory_helper_construct (GType object_type);


G_END_DECLS

#endif
